任务流 -- 入仓打标 

多批次提交时间间隔:
1 导入店铺商品 一次2000个 间隔时间1分钟 
2 导入物流属性（参数） 一次2000个  时间隔时间5分钟   
3 添加库存   500个  时间30s
4 启用库存商品分配  2000 时间隔时间5分钟  
5 启用京配打标生效   2000个时间30s


任务要求:
a. 必须先执行完成 导入店铺商品 并 启用店铺商品 后, 才能执行其他项目
b. 每一步需要有适当时间间隔
c. 注意分批提交的时间间隔

1 导入店铺商品 启用店铺商品


2 导入物流属性（参数）
3 添加库存
4 启用库存商品分配
5 启用京配打标生效



启动前端开发服务器
在一个终端中，您只需要运行以下命令：

npm run dev:frontend -- --mode devlocal


启动后端服务器
在您的另一个编辑器（比如 VS Code）的终端中，运行以下命令：

npm run start:backend


warehouseLabeling: {
    name: '入仓打标',
    stages: [
        {
            name: '阶段一：商品准备 (并行)',
            tasks: [
                // 这三个任务可以并行执行，它们都只依赖最初的SKU列表
                { name: 'importStoreProducts', source: 'initial' },
                { name: 'getProductData', source: 'initial' }, // 这个任务负责获取详细的商品数据
                { name: 'enableStoreProducts', source: 'initial' }
            ]
        },
        {
            name: '阶段二：核心流程 (并行管道)',
            tasks: [
                // 这两个任务都依赖 'getProductData' 的输出，可以并行启动
                { name: 'importLogisticsAttributes', source: 'getProductData' },
                { name: 'enableInventoryAllocation', source: 'getProductData' }
            ]
        },
        {
            name: '阶段三：依赖性收尾 (串行)',
            tasks: [
                // 这个任务依赖 'importLogisticsAttributes'
                { name: 'addInventory', source: 'importLogisticsAttributes' },
                // 这个任务依赖 'enableInventoryAllocation'
                { name: 'enableJpSearch', source: 'enableInventoryAllocation' }
            ]
        }
    ]
}
